import java.util.Scanner;
import java.util.concurrent.TimeUnit;

public class ChibiPomodoroTimer {
    private static final int WORK_DURATION = 1;       // Work duration in minutes (for testing, set to 1)
    private static final int SHORT_BREAK_DURATION = 1; // Short break duration in minutes
    private static final int LONG_BREAK_DURATION = 2;  // Long break duration in minutes
    private static final int POMODOROS_BEFORE_LONG_BREAK = 4;
    
    private int pomodorosCompleted = 0;

    public static void main(String[] args) {
        ChibiPomodoroTimer timer = new ChibiPomodoroTimer();
        timer.displayMenu();
    }

    // Display the main menu
    private void displayMenu() {
        Scanner scanner = new Scanner(System.in);
        
        while (true) {
            System.out.println("\n=========================");
            System.out.println("🍅 Chibi Pomodoro Timer 🍅");
            System.out.println("=========================");
            System.out.println("1. Start Pomodoro Timer");
            System.out.println("2. What is Pomodoro Timer about?");
            System.out.println("3. Exit");
            System.out.print("Choose an option: ");
            
            String choice = scanner.nextLine();
            
            switch (choice) {
                case "1":
                    startPomodoroCycle(scanner);
                    break;
                case "2":
                    displayPomodoroExplanation();
                    break;
                case "3":
                    System.out.println("Thank you for using the Chibi Pomodoro Timer! Have a productive day! 🍅");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid option. Please choose 1, 2, or 3.");
            }
        }
    }

    // Display explanation of the Pomodoro Technique
    private void displayPomodoroExplanation() {
        System.out.println("\n🍅 What is Pomodoro Timer about?");
        System.out.println("The secret to effective time management is... thinking in tomatoes rather than hours.");
        System.out.println("It may seem silly initially, but millions of people swear by the life-changing power of the Pomodoro Technique.");
        System.out.println("(Pomodoro is Italian for tomato. 🍅)\n");
        System.out.println("This popular time management method asks you to alternate pomodoros — focused work sessions —");
        System.out.println("with frequent short breaks to promote sustained concentration and stave off mental fatigue.");
        System.out.println("\nThe Pomodoro Technique may be for you if you…");
        System.out.println("• Find little distractions often derail the whole workday");
        System.out.println("• Consistently work past the point of optimal productivity");
        System.out.println("• Have lots of open-ended work that could take unlimited amounts of time");
        System.out.println("• Are overly optimistic when it comes to how much you can get done in a day (aren’t we all 🙃)");
        System.out.println("• Enjoy gamified goal-setting");
        System.out.println("• Really like tomatoes 🍅");
    }

    // Pomodoro timer cycle logic
    private void startPomodoroCycle(Scanner scanner) {
        while (true) {
            printChibiBanner();
            System.out.println("🍅 Starting work session!");
            startTimer(WORK_DURATION, "Work");

            pomodorosCompleted++;
            displayMotivationalMessage();
            
            if (pomodorosCompleted % POMODOROS_BEFORE_LONG_BREAK == 0) {
                System.out.println("🌼 Long break time! 🌼");
                startTimer(LONG_BREAK_DURATION, "Long Break");
            } else {
                System.out.println("💫 Short break time! 💫");
                startTimer(SHORT_BREAK_DURATION, "Short Break");
            }
            
            System.out.print("\nContinue with another Pomodoro? (yes/no): ");
            String response = scanner.nextLine();
            if (!response.equalsIgnoreCase("yes")) {
                System.out.println("\nThanks for using the Chibi Pomodoro Timer! 🌟");
                displaySessionSummary();
                break;
            }
        }
    }

    // Timer countdown with theme display
    private void startTimer(int durationMinutes, String sessionType) {
        try {
            for (int i = durationMinutes; i > 0; i--) {
                System.out.printf("\r%s Time left: %d minute(s) ⏳", sessionType, i);
                TimeUnit.SECONDS.sleep(1);
            }
            System.out.println("\n⏰ Time's up for " + sessionType + "!");
        } catch (InterruptedException e) {
            System.out.println("Timer interrupted.");
        }
    }

    // Display a chibi-themed motivational message
    private void displayMotivationalMessage() {
        String[] motivationalMessages = {
            "Great job! Keep going! 😊",
            "You're awesome! Keep up the great work! 🌟",
            "One step closer to your goals! 🌈",
            "You're unstoppable! 🚀",
            "Take a deep breath and let's go again! 🍃"
        };
        
        System.out.println("\n🌟 " + motivationalMessages[pomodorosCompleted % motivationalMessages.length] + " 🌟\n");
    }

    // Chibi-themed banner for the app
    private void printChibiBanner() {
        System.out.println("\n====================");
        System.out.println("🍅 Chibi Pomodoro Timer 🍅");
        System.out.println("====================");
        System.out.println("~ Let's stay focused together! ~");
    }

    // Display a summary of completed Pomodoros
    private void displaySessionSummary() {
        System.out.println("\n🌸 Summary of Completed Pomodoros 🌸");
        System.out.println("Total Pomodoros completed: " + pomodorosCompleted);
        System.out.println("Great work today! See you next time! 🐱");
    }
}
